#+TITLE:  Emacs study note
#+AUTHOR: Comcx
#+DATE:   <2019-10-02 ä¸‰>

* Basic operation

** Introduction
*GNU Emacs*
*** Advancement
- Controling of processes
- Self-documenting
- Customization
- Extensible(with /emacs lisp/)
- Powerful org-mode

** Getting started
*** Entering Emacs
Just type
#+BEGIN_SRC 
emacs
#+END_SRC
and here we are!

#+BEGIN_SRC 
C-h t
Emacs Tutorial
#+END_SRC

If we do not want to display the startup screen(which I think is ugly:(),
set the variable
#+BEGIN_SRC 
inhibit-startup-screen
#+END_SRC
to =nil=
then instead, Emacs will display a buffer named **scratch**
which can be used to evaluate elisp codes.

Moreover, we can also force emacs to display certain file at startup by setting the variable
#+BEGIN_SRC 
initial-buffer-choice
#+END_SRC
to a file path

*** Exiting Emacs
- C-x C-c : Kill Emacs
| command                | function                                      |
| confirm-kill-processes | ask for confirmation for killing subprocesses |
| confirm-kill-emacs     |                                               |
- C-z 
#+BEGIN_SRC 
(if (on text terminal) 
  (suspend Emacs) 
  (minimize selected frame))
#+END_SRC

** Screen organization
*** The *Frame*: a graphic window or terminal screen occupied by emacs.
Contains several *Regions*
**** Menu bar
#+BEGIN_SRC 
F10
to open menu(menu-bar-open)
#+END_SRC

**** Tool bar
**** Window(text area): display /buffer/
at least one selected at any time
**** Mode line
Describe current buffer
#+BEGIN_SRC 
Format: 
cs:ch-fr buf      pos line   (major minor)
#+END_SRC
where
- cs => charactor set
  - *-* => no special char set
  - *=* => no conversion

- ch
  - *--* => same content as file in disk
  - **   => buffer is modified
  - *%** => buffer is modified for read-only file
  - *%%* => otherwise

- -
  - *-* => normal
  - *@* => default-directory is on a remote machine

- fr: file name(terminal only)

- buf: buffer name

**** Echo area
- for echoing commands and errors
  #+BEGIN_SRC 
  C-x =
  Display a message describing the char at point, its position and its current column
  #+END_SRC
  the message are saved in a special buffer named **Message**,
  the variable
  #+BEGIN_SRC emacs-lisp
  message-log-max
  #+END_SRC
  limit **Message** buffer to a certain number of lines

- To display the *minibuffer*
  a special window to input some commands
  can always get out of *minibuffer* by typing in
  #+BEGIN_SRC emacs-lisp
  C-g
  #+END_SRC

** Editing elements
*** *Point*: a basic conception of cursor
*** *Mark*
*** *Region*

** Charactors, Keys and Commands
*** Charactors
#+BEGIN_SRC 
Control => Ctrl
Alt     => Meta(default)
#+END_SRC
- Shortcuts:
  - C-x : Control-x
  - M-x : Meta-x

Moreover, you can just type [ESC] before charactors to envoke Meta, for example,
#+BEGIN_SRC 
ESC a   === M-a
ESC C-a === C-M-a
#+END_SRC

/note:/ Emacs may be blocked by window manager, be careful:)

*** Keys
- Complete key
- Prefix key
| C-c     | C-h   | C-x   |
| C-x RET | C-x @ | C-x a |
| C-x n   | C-x r | C-x v |
| C-x 4   | C-x 5 | C-x 6 |
| ESC     | M-g   | M-o   |

*** Commands
| Key | function  |
|-----+-----------|
| C-n | next-line |

**** Inserting Text

- Overview
  | Key   | Function             |
  |-------+----------------------|
  | RET   | newline              |
  | DEL   | delete-backward-char |
  | C-q   | quoted-insert        |
  | C-x 8 |                      |

- Usage of =C-q=


**** Changing location of Point
- Keys for arrow operations
  |     | C-p |     |
  | C-b |     | C-f |
  |     | C-n |     |


**** Erasing Text

**** Undoing

**** Files

**** Help

**** Information

**** Numeric Arguments

**** Repeating Commands

* Flexible Emacs Lisp


* Awesome org-mode








